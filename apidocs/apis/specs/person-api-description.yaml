openapi: "3.0.0"
info:
  version: '0.0.1'
  title: QueerGlobal Person API
  description: An api for Person data in the QueerGlobal system
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://queerglobal.com/api
paths:
  /healthcheck:
    get:
      summary: Healthcheck for this API
      description: Healthcheck for server status
      operationId: InternalHealthCheck
      responses:
        '200':
          description: Response to healthchecks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthCheckResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /person/{id}:
    get:
      summary: Returns a person by ID
      description: Returns a person based on a single ID
      operationId: FindPersonById
      parameters:
        - name: id
          in: path
          description: ID of person to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: person response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a person by ID
      description: deletes a single person based on the ID supplied
      operationId: delete person
      parameters:
        - name: id
          in: path
          description: ID of person to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: person deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a person
      description: Updates person. Duplicates are allowed
      operationId: UpdatePerson
      parameters:
        - name: id
          in: path
          description: ID of person to delete
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Person to update to the page
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /person:
    post:
      summary: Creates a new person
      description: Creates a new person. Duplicates are allowed
      operationId: AddPerson
      requestBody:
        description: Person to add to the page
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Person'
      responses:
        '200':
          description: person
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Person'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Returns person based on query string
      description: Returns person based on query strings
      operationId: FindPersons
      parameters:
        - name: userName          
          in: query
          description: ID of user to fetch
          required: false
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: person response
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Person'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    HealthCheckResponse:
      type: object
      required: 
        - status
        - serviceName
      properties: 
        status: 
          type: string
        serviceName:
          type: string

    Person:
      required:
        - userName
        - personID
        - firstName
        - lastName
      properties:
        userName:
          type: string
        personID:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        location:
          type: object
          $ref: '#/components/schemas/Location'
        socialLinks:
          type: array
          items:
            $ref: '#/components/schemas/SocialLink'
        chips: 
          type: array
          items:
            $ref: '#/components/schemas/Chip'

    Chip:
      required:
        - value
      properties:
        id:
          type: number
          format: int64
        value:
          type: string

    SocialLink:
      required:
        - serviceName
        - linkToService
        - handle
      properties:
        serviceName:
          type: string
        linkToService:
          type: string
        handle:
          type: string

    Location:
      required:
        - StreetAddressLines
        - Country
        - AdministrativeArea
        - Locality
        - Latitude
        - Longitude
      properties:
        StreetAddressLines:
          type: string
          description: Street Address Lines combined into a single field
        Country:
          type: string
          description: Country Code
        AdminstrativeArea:
          type: string
          description: Adminstrative Area (in US, for example, a State)
        Locality:
          type: string
          description: Tha name of the locality. In the US, the city or town
        Lat:
          type: number
          description: Degrees latitude of the location
        Long:
          type: number
          description: Degrees longitude of the location

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
          description: Error code
        message:
          type: string
          description: Error message
