openapi: "3.0.0"
info:
  version: '0.0.1'
  title: QueerGlobal RoleBased Auth API
  description: An api for Member and Role data in the QueerGlobal system
  termsOfService: http://swagger.io/terms/
  contact:
    name: Swagger API Team
    email: apiteam@swagger.io
    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://queerglobal.com/api
paths:
  /healthcheck:
    get:
      summary: Healthcheck for this API
      description: Healthcheck for server status
      operationId: InternalHealthCheck
      responses:
        '200':
          description: Response to healthchecks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/HealthCheckResponse'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /member/{id}:
    get:
      summary: Returns a member by ID
      description: Returns a member based on a single ID
      operationId: FindMemberById
      parameters:
        - name: id
          in: path
          description: ID of member to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: member response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a member by ID
      description: deletes a single member based on the ID supplied
      operationId: delete member
      parameters:
        - name: id
          in: path
          description: ID of member to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: member deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a member
      description: Updates member. Duplicates are allowed
      operationId: UpdateMember
      parameters:
        - name: id
          in: path
          description: ID of member to delete
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Member to update to the page
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '200':
          description: member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /member:
    post:
      summary: Creates a new member
      description: Creates a new member. Duplicates are allowed
      operationId: AddMember
      requestBody:
        description: Member to add to the page
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Member'
      responses:
        '200':
          description: member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Member'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Returns member based on query string
      description: Returns member based on query strings
      operationId: FindMembers
      parameters:
        - name: userName          
          in: query
          description: ID of user to fetch
          required: false
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: member response
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Member'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /role/{id}:
    get:
      summary: Returns a role by ID
      description: Returns a role based on a single ID
      operationId: FindMemberById
      parameters:
        - name: id
          in: path
          description: ID of member to fetch
          required: true
          schema:
            type: string
      responses:
        '200':
          description: member response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Deletes a member by ID
      description: deletes a single member based on the ID supplied
      operationId: delete member
      parameters:
        - name: id
          in: path
          description: ID of member to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: member deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    put:
      summary: Update a member
      description: Updates member. Duplicates are allowed
      operationId: UpdateMember
      parameters:
        - name: id
          in: path
          description: ID of member to delete
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        description: Member to update to the page
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'


  /role:
    post:
      summary: Creates a new role
      description: Creates a new role
      operationId: AddRole
      requestBody:
        description: Role to add to the page
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: member
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    get:
      summary: Returns member based on query string
      description: Returns member based on query strings
      operationId: FindRoles
      parameters:
        - name: userName          
          in: query
          description: ID of user to fetch
          required: false
          schema:
            type: integer
            format: int64

      responses:
        '200':
          description: member response
          content:
            application/json:
              schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/Role'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'




components:
  schemas:
    HealthCheckResponse:
      type: object
      required: 
        - status
        - serviceName
      properties: 
        status: 
          type: string
        serviceName:
          type: string

    Member:
      required:
        - userName
        - memberID
        - firstName
        - lastName
        - email
        - roles
      properties:
        userName:
          type: string
        memberID:
          type: integer
          format: int64
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        roles:
          type: object
          $ref: '#/components/schemas/Role'

    Role:
      required:
        - roleName
      properties:
        roleID:
          type: integer
          format: int64
        roleName:
          type: string

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int64
          description: Error code
        message:
          type: string
          description: Error message
